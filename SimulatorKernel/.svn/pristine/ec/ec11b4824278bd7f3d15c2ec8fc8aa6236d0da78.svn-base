package br.ufpe.simulatorkernel.domain;

import br.ufpe.simulator.math.MathUtils;

public class SpanSet extends IsPhysicalElement {

	private Span span;

	public void setNoiseFigure(double noiseFigure) {
		span.setNoiseFigure(noiseFigure);
	}

	public void createSpans(Span span, int numberOfSpans, double a) {
		this.span = span;
		double distance = numberOfSpans * span.getDistance();
		this.span.getFiber().setLs(distance);
		double totalLoss = MathUtils.converdBToLinear(distance
				* span.getFiber().getAlfadB());
		double g = getLineAmplifiersGTotal(a, totalLoss, numberOfSpans);
		double gTotal = 1;
		for (int i = 0; i < numberOfSpans; i++) {
			gTotal = gTotal + (Math.pow(a, i + 1) * g);
		}
		this.span.getLineAmplifier().setG(gTotal - numberOfSpans + 1);
	}

	private double getLineAmplifiersGTotal(double a, double totalLoss,
			int numberOfSpans) {
		return MathUtils.raiz(
				totalLoss / (Math.pow(a, MathUtils.soma(numberOfSpans))),
				numberOfSpans);
	}

	public void createSpans(Span span, double lsTotal, double a) {
		int numberOfSpans = (int) (lsTotal / span.getDistance());
		createSpans(span, numberOfSpans, a);
	}

	@Override
	public boolean isTopologyNode() {
		return false;
	}

	@Override
	public double getLinearNoise() {
		return span.getLinearNoise();
	}

	@Override
	public double getG() {
		return 1;
	}

}
